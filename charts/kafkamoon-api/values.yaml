kafkamoon:
  mode: k8s
  awsAccount:
  awsRegion: us-east-1
  api:
    port: 8080
    image: matheuscruzdev/kafkamoon-api:v1.0.0-alpha.3
    tls:
      acm:
  docs:
    port: 3000
    image: docker.io/matheuscruzdev/kafkamoon-docs:main
    tls:
      acm:
# bitnami/grafana-operator
grafana-operator:
  enabled: true
  grafana:
    service:
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
        service.beta.kubernetes.io/aws-load-balancer-tls-cert: arn:aws:acm:us-east-1:555411961606:certificate/18bf1ea5-991b-435d-919b-8de8f88feed6
        service.beta.kubernetes.io/aws-load-balancer-tls-ports: "https"
      extraPorts: 
        - port: 80
          name: "http"
          targetPort: 3000
        - port: 443
          name: "https"
          targetPort: 3000
      type: "LoadBalancer"
  commonLabels:
    dashboards: "grafana"

# bitnami/kafka
kafka:
  enabled: true
  extraConfigs:
    deleteTopicEnable: true
    autoCreateTopicsEnable: false 
  volumePermissions:
    enabled: true
  controller:
    replicaCount: 2
  listeners:
    client:
      protocol: PLAINTEXT
    controller:
      protocol: PLAINTEXT
    interbroker:
      protocol: PLAINTEXT
  metrics:
    jmx:
      enabled: true

# bitnami/prometheus
prometheus:
  enabled: true
  alertmanager:
    enabled: false
  server:
    configuration: |
      scrape_configs:
        - job_name: 'kafkamoon-api-metrics'
          metrics_path: '/actuator/prometheus'
          scrape_interval: 5s
          static_configs:
            - targets:  ['kafkamoon-api.default.svc.cluster.local:80']
              labels: 
                application: 'kafkamoon-api'
        - job_name: 'kafkamoon-kafka-jmx'
          metrics_path: '/metrics'
          scrape_interval: 5s
          static_configs:
            - targets: ['kafkamoon-jmx-metrics.default.svc.cluster.local:5556']
              labels:
                application: 'kafka-jmx'

# bitnami/keycloak
keycloak:
  enabled: true
  production: true
  proxy: edge
  service:
    type: "LoadBalancer"
    extraPorts:
    - name: "extraport"
      port: 443
      targetPort: 80
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
      service.beta.kubernetes.io/aws-load-balancer-tls-cert: arn:aws:acm:us-east-1:555411961606:certificate/f2c64af7-6db3-45ec-baed-8ff1a6ac2379
      service.beta.kubernetes.io/aws-load-balancer-tls-ports: "extraport"
